AWSTemplateFormatVersion: "2010-09-09"
Description:
  Basic template to setup networking resources such as Virtual Private Cloud (VPC), Internet Gateway, Route Tables, and Routes in a stack.
  Uses AWS CloudFormation for infrastructure setup and tear down.

# Parameters
Parameters:
  Environment:
    Description: Infrastructure as Code - Development Environment
    Type: String
    Default: infra-cloudformation
  VpcCidrBlock:
    Description: CIDR Block for VPC
    Type: String
    Default: 10.0.0.0/16
  CidrSubnet1:
    Description: Subnet-01 IP range in the first AZ(Availability Zone)
    Type: String
    Default: 10.0.10.0/24
  CidrSubnet2:
    Description: Subnet-02 IP range in the second AZ(Availability Zone)
    Type: String
    Default: 10.0.11.0/24
  CidrSubnet3:
    Description: Subnet-03 IP range in the third AZ(Availability Zone)
    Type: String
    Default: 10.0.20.0/24
  VpcName:
    Description: Virtual Private Cloud name
    Type: String
    Default: AWS::StackName
  GatewayName:
    Description: Internet Gateway name
    Type: String
    Default: Internet Gateway

# Setup resources
Resources:
  # Virtual Private Cloud
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Ref VpcName
  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref GatewayName
  # Internet Gateway Attachment
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  # Subnet 1
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref CidrSubnet1
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Public Subnet (AZ1)
  # Subnet 2
  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref CidrSubnet2
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Public Subnet (AZ2)
  # Subnet 3
  Subnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref CidrSubnet3
      AvailabilityZone: !Select [2, !GetAZs '']
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Public Subnet (AZ3)
  # Route Table
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Public Routes
  # Public Route in Route Table
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  # Attach Subnet1 to Route Table
  PublicSubnet1RouteAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref RouteTable
        SubnetId: !Ref Subnet1
  # Attach Subnet2 to Route Table
  PublicSubnet2RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet2
  # Attach Subnet3 to Route Table
  PublicSubnet3RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet3
# Outputs
Outputs:
    # Show the VPC ID
    VpcId:
      Description: VPC ID
      Value: !Ref VPC
    # Subnet 1
    Subnet1:
      Description: Public Subnet-01
      Value: !Ref Subnet1
    # Subnet 2
    Subnet2:
      Description: Public Subnet-02
      Value: !Ref Subnet2
    # Subnet 3
    Subnet3:
      Description: Public Subnet-03
      Value: !Ref Subnet3
    # List of subnets
    Subnets:
      Description: The list of subnets
      Value: !Join [ ",", [ !Ref Subnet1, !Ref Subnet2, !Ref Subnet3 ]]